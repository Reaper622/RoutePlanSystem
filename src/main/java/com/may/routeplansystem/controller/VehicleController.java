package com.may.routeplansystem.controller;import com.may.routeplansystem.constant.Response;import com.may.routeplansystem.constant.SessionMessage;import com.may.routeplansystem.entity.dto.ResponseEntity;import com.may.routeplansystem.entity.po.VehicleMessage;import com.may.routeplansystem.service.VehicleService;import com.may.routeplansystem.util.validation.insertAndUpdateGroup.Insert;import io.swagger.annotations.Api;import io.swagger.annotations.ApiOperation;import org.springframework.validation.BindingResult;import org.springframework.validation.annotation.Validated;import org.springframework.web.bind.annotation.*;import org.springframework.web.multipart.MultipartFile;import javax.annotation.Resource;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpSession;import javax.validation.constraints.NotNull;import java.util.List;import static com.may.routeplansystem.constant.ResponseStatu.SUCCESS;/** * @author 10587 */@RestController@RequestMapping(value = "vehicleSystem")@Api(tags = "车辆模块")public class VehicleController {    @Resource    private VehicleService vehicleService;    @PostMapping(value = "/user/vehicle")    @ApiOperation("通过参数添加车辆")    public ResponseEntity userVehicleRegister(@Validated(Insert.class) VehicleMessage vehicle, BindingResult result) {        if (result.hasErrors()){            String message = result.getAllErrors().get(0).getDefaultMessage();            return new ResponseEntity<>(SUCCESS, Response.SUCCESSFUL, message);        }        vehicleService.vehicleRegister(vehicle);        return new ResponseEntity<>(SUCCESS, Response.SUCCESSFUL, null);    }    @GetMapping(value = "/user/vehicle")    @ApiOperation("获取用户车辆信息")    public ResponseEntity<List<VehicleMessage>> userVehicleMessage(HttpSession session) {        int userId = Integer.parseInt((String) session.getAttribute(SessionMessage.USER_ID_KEY));        List<VehicleMessage> vehicleMessages = vehicleService.userVehicleMessage(userId);        return new ResponseEntity<>(0, Response.SUCCESSFUL, vehicleMessages);    }    @PostMapping(value = "/excelVehicleInfo/{questionId}")    @ApiOperation("通过Excel添加车辆")    public ResponseEntity upload(@RequestParam(value = "file", required = false) MultipartFile file, HttpServletRequest request,                                 @PathVariable("questionId") int questionId) {        vehicleService.vehicleBatchImport(file, request, questionId);        return new ResponseEntity<>(SUCCESS, Response.SUCCESSFUL, null);    }    @DeleteMapping(value = "/user/vehicle")    @ApiOperation("删除车辆")    @Validated    public ResponseEntity userVehicleDelete            (@RequestBody @NotNull(message = "vehicleIdList 不能为空") List<Integer> vehicleIdList) {        vehicleService.deleteVehicle(vehicleIdList);        return new ResponseEntity<>(SUCCESS, Response.SUCCESSFUL, null);    }}